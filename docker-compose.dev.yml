name: 'crydonkey-dev'

services:
  server:
    container_name: crydonkey-server-dev
    build:
      context: .
      dockerfile: backend/Dockerfile
      target: dev
    image: crydonkey-server:dev
    ports:
      - "${EXPRESS_SERVER_PORT}:${EXPRESS_SERVER_PORT}"
    depends_on:
      - redis
      - mongo
      - shared
    env_file:
      - ./.env.dev
      - ./backend/.env
    volumes:
      - ./backend:/usr/src/app/backend
      - /usr/src/app/node_modules
      - /usr/src/app/backend/node_modules
      - ./shared:/usr/src/app/shared
    networks:
      - crydonkey-network

  frontend:
    container_name: crydonkey-frontend-dev
    build:
      context: .
      dockerfile: frontend/Dockerfile
      target: dev
    image: crydonkey-frontend:dev
    volumes:
      - ./frontend/src:/usr/src/app/frontend/src
      - ./shared:/usr/src/app/shared
    ports:
      - "8080:8080"
    env_file:
      - ./.env.dev
      - ./frontend/.env
    environment:
      - CHOKIDAR_USEPOLLING=true
    depends_on:
      - shared
    networks:
      - crydonkey-network

  shared:
    build:
      context: .
      dockerfile: shared/Dockerfile
    volumes:
      - ./shared:/usr/src/app/shared
    environment:
      - CHOKIDAR_USEPOLLING=true
    command: yarn build:watch

  redis:
    image: redis:alpine
    container_name: crydonkey-redis-dev
    ports:
      - "${REDIS_PORT_LOCAL}:${REDIS_PORT}"
    volumes:
      - ${REDIS_DATA_PATH}:/data/redis
    networks:
      crydonkey-network:
        aliases:
          - redis

  mongo:
    image: mongo:latest
    container_name: crydonkey-mongo-dev
    command: [ "mongod", "--config", "/etc/mongod.conf" ]
    ports:
      - "${DB_PORT_LOCAL}:${DB_PORT}"
    volumes:
      - ${DB_DATA_PATH}:/data/db
      - ./backend/mongod.conf:/etc/mongod.conf:ro
    networks:
      crydonkey-network:
        aliases:
          - mongo

networks:
  crydonkey-network:
    driver: bridge
